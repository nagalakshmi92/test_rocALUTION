<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrocalution_1_1_local_vector" kind="class" language="C++" prot="public">
    <compoundname>rocalution::LocalVector</compoundname>
    <basecompoundref refid="classrocalution_1_1_vector" prot="public" virt="non-virtual">rocalution::Vector&lt; ValueType &gt;</basecompoundref>
    <includes refid="local__vector_8hpp" local="no">local_vector.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ValueType</declname>
        <defname>ValueType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a20913b1560bec91831c49351530d34e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ValueType &amp;</type>
        <definition>ValueType&amp; rocalution::LocalVector&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access operator (only for host data) </para>        </briefdescription>
        <detaileddescription>
<para>The elements in the vector can be accessed via [] operators, when the vector is allocated on the host.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>access data at index <computeroutput>i</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value at index <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="comment">//<sp/>rocALUTION<sp/>local<sp/>vector<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.Allocate(</highlight><highlight class="stringliteral">&quot;my_vector&quot;</highlight><highlight class="normal">,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>vector<sp/>with<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.Ones();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>even<sp/>elements<sp/>to<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.GetSize();<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>vec[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae584b51e9e91a17b5aeb5750cfd1d8d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const ValueType &amp;</type>
        <definition>const ValueType&amp; rocalution::LocalVector&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="190" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrocalution_1_1_local_vector_1a727a6a2779ff9706494503148692945a" prot="private" static="no" mutable="no">
        <type><ref refid="classrocalution_1_1_base_vector" kindref="compound">BaseVector</ref>&lt; ValueType &gt; *</type>
        <definition>BaseVector&lt;ValueType&gt;* rocalution::LocalVector&lt; ValueType &gt;::vector_</definition>
        <argsstring></argsstring>
        <name>vector_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="297" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrocalution_1_1_local_vector_1a0604a42470b999f35279350a1d25beea" prot="private" static="no" mutable="no">
        <type><ref refid="classrocalution_1_1_host_vector" kindref="compound">HostVector</ref>&lt; ValueType &gt; *</type>
        <definition>HostVector&lt;ValueType&gt;* rocalution::LocalVector&lt; ValueType &gt;::vector_host_</definition>
        <argsstring></argsstring>
        <name>vector_host_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="300" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrocalution_1_1_local_vector_1a2d0a61bac246791efe423eabf4da0882" prot="private" static="no" mutable="no">
        <type><ref refid="classrocalution_1_1_accelerator_vector" kindref="compound">AcceleratorVector</ref>&lt; ValueType &gt; *</type>
        <definition>AcceleratorVector&lt;ValueType&gt;* rocalution::LocalVector&lt; ValueType &gt;::vector_accel_</definition>
        <argsstring></argsstring>
        <name>vector_accel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1ac92816b5a161c95a8ffbf20b7f730c23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalVector&lt; double &gt;</definition>
        <argsstring></argsstring>
        <name>LocalVector&lt; double &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a337d67c1a4d80c8882f68d2b6e595de6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalVector&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>LocalVector&lt; float &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1af1c5280637f849dba6fd35f668596e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalVector&lt; std::complex&lt; double &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalVector&lt; std::complex&lt; double &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a07c8dff4d321117f082e9ea978bcf44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalVector&lt; std::complex&lt; float &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalVector&lt; std::complex&lt; float &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a2021b5a4bc5f656cc48f4e97525fc3b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalVector&lt; int &gt;</definition>
        <argsstring></argsstring>
        <name>LocalVector&lt; int &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1ac25414b59f0a5cf064e05213a5911a13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalMatrix&lt; double &gt;</definition>
        <argsstring></argsstring>
        <name>LocalMatrix&lt; double &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a249687a6b0f164407332088fe0b7a78a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalMatrix&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>LocalMatrix&lt; float &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a9165d56ef03f0ed265f5886e6eba2ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalMatrix&lt; std::complex&lt; double &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalMatrix&lt; std::complex&lt; double &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1ae8b5abfac229493f26dba8f51d7c9178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalMatrix&lt; std::complex&lt; float &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalMatrix&lt; std::complex&lt; float &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a8e6e6047a29b30dafd58a02c2e948729" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalStencil&lt; double &gt;</definition>
        <argsstring></argsstring>
        <name>LocalStencil&lt; double &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a11a2b915fe0ab350b280035d273ebc66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalStencil&lt; float &gt;</definition>
        <argsstring></argsstring>
        <name>LocalStencil&lt; float &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1aeb080fc94d1a8c4450fe8512fa01c0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalStencil&lt; std::complex&lt; double &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalStencil&lt; std::complex&lt; double &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a047ad5fb04fd8368e63e76453e185b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalStencil&lt; std::complex&lt; float &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>LocalStencil&lt; std::complex&lt; float &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1ad50ce751e5dafbeb3ca73c65cd542fce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GlobalVector&lt; ValueType &gt;</definition>
        <argsstring></argsstring>
        <name>GlobalVector&lt; ValueType &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1af6b5193a9183697399f1cfe579f62ce8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LocalMatrix&lt; ValueType &gt;</definition>
        <argsstring></argsstring>
        <name>LocalMatrix&lt; ValueType &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrocalution_1_1_local_vector_1a350700fdc95d2918442f14af47bb3ff4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GlobalMatrix&lt; ValueType &gt;</definition>
        <argsstring></argsstring>
        <name>GlobalMatrix&lt; ValueType &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="303" column="1" bodyfile="/home/tcs/rocALUTION/src/base/local_vector.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a39865280e6b5328820ff7d0fcea81b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rocalution::LocalVector&lt; ValueType &gt;::LocalVector</definition>
        <argsstring>()</argsstring>
        <name>LocalVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a9d3f36859ea4d3e70ac03c8d180f82bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rocalution::LocalVector&lt; ValueType &gt;::~LocalVector</definition>
        <argsstring>()</argsstring>
        <name>~LocalVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1afffc0e56391b45874224e7003dca6076" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::MoveToAccelerator</definition>
        <argsstring>(void)</argsstring>
        <name>MoveToAccelerator</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a2238fc9adc895dff8744a5e470b79282">MoveToAccelerator</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move the object to the accelerator backend. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a826bebed1f7008efcb99551e1fb0093e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::MoveToAcceleratorAsync</definition>
        <argsstring>(void)</argsstring>
        <name>MoveToAcceleratorAsync</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a1c37dbcf976261be544dc6c66502182a">MoveToAcceleratorAsync</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move the object to the accelerator backend with async move. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae3120701431e40e505554e98f55df533" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::MoveToHost</definition>
        <argsstring>(void)</argsstring>
        <name>MoveToHost</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a4e572619edf6570b746c263e3b9e82e9">MoveToHost</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move the object to the host backend. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a8370ff1b9f590254ec0e8f4c28e1f7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::MoveToHostAsync</definition>
        <argsstring>(void)</argsstring>
        <name>MoveToHostAsync</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a6491e18ff3f4809b42c3c3c94d1bc1f2">MoveToHostAsync</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move the object to the host backend with async move. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1aed0b8ba7c4968cddd589b4605b63120b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Sync</definition>
        <argsstring>(void)</argsstring>
        <name>Sync</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a67986dbebc9b025e6ac30be4f85f784b">Sync</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sync (the async move) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a174999811741be695665554df732aa0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Info</definition>
        <argsstring>(void) const</argsstring>
        <name>Info</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a62720e4ccdd3879dcf093abc2688076e">Info</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Print object information. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>Info</computeroutput> can print object information about any rocALUTION object. This information consists of object properties and backend data.</para><para><simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">mat.Info();</highlight></codeline>
<codeline><highlight class="normal">vec.Info();</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a42d48bb3bb6a89218ede8fcff7bbc644" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>IndexType2</type>
        <definition>virtual IndexType2 rocalution::LocalVector&lt; ValueType &gt;::GetSize</definition>
        <argsstring>(void) const</argsstring>
        <name>GetSize</name>
        <reimplements refid="classrocalution_1_1_vector_1a69a7295c57e35e030999c5764c05cfe7">GetSize</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the size of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a83a0ca326ebe939dac9cea93022dc663" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rocalution::LocalVector&lt; ValueType &gt;::Check</definition>
        <argsstring>(void) const</argsstring>
        <name>Check</name>
        <reimplements refid="classrocalution_1_1_vector_1afb8f27ffca2ff3d59995d56b7093330c">Check</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Perform a sanity check of the vector. </para>        </briefdescription>
        <detaileddescription>
<para>Checks, if the vector contains valid data, i.e. if the values are not infinity and not NaN (not a number).</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vector is ok (empty vector is also ok). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is something wrong with the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae9ad82b77b1fa3f94112092d69354a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::Allocate</definition>
        <argsstring>(std::string name, IndexType2 size)</argsstring>
        <name>Allocate</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>IndexType2</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate a local vector with name and size. </para>        </briefdescription>
        <detaileddescription>
<para>The local vector allocation function requires a name of the object (this is only for information purposes) and corresponding size description for vector objects.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>object name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the vector</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.Allocate(</highlight><highlight class="stringliteral">&quot;my<sp/>vector&quot;</highlight><highlight class="normal">,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal">vec.Clear();</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae189cd6c550d72df04f2e7a15c9a5d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::SetDataPtr</definition>
        <argsstring>(ValueType **ptr, std::string name, int size)</argsstring>
        <name>SetDataPtr</name>
        <param>
          <type>ValueType **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Initialize a <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> on the host with externally allocated data. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>SetDataPtr</computeroutput> has direct access to the raw data via pointers. Already allocated data can be set by passing the pointer.</para><para><simplesect kind="note"><para>Setting data pointer will leave the original pointer empty (set to <computeroutput>NULL</computeroutput>).</para></simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="comment">//<sp/>Allocate<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ValueType*<sp/>ptr_vec<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ValueType[200];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>rocALUTION<sp/>local<sp/>vector<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>vector<sp/>data,<sp/>ptr_vec<sp/>will<sp/>become<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.SetDataPtr(&amp;ptr_vec,<sp/></highlight><highlight class="stringliteral">&quot;my_vector&quot;</highlight><highlight class="normal">,<sp/>200);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a9400481562559c79b10346b8af097e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::LeaveDataPtr</definition>
        <argsstring>(ValueType **ptr)</argsstring>
        <name>LeaveDataPtr</name>
        <param>
          <type>ValueType **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Leave a <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> to host pointers. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>LeaveDataPtr</computeroutput> has direct access to the raw data via pointers. A <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> object can leave its raw data to a host pointer. This will leave the <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> empty.</para><para><simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="comment">//<sp/>rocALUTION<sp/>local<sp/>vector<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.Allocate(</highlight><highlight class="stringliteral">&quot;my_vector&quot;</highlight><highlight class="normal">,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ValueType*<sp/>ptr_vec<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>(steal)<sp/>the<sp/>data<sp/>from<sp/>the<sp/>vector,<sp/>this<sp/>will<sp/>leave<sp/>the<sp/>local<sp/>vector<sp/>object<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.LeaveDataPtr(&amp;ptr_vec);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae58d9c9b346f80079f4028108b8dfdb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <reimplements refid="classrocalution_1_1_vector_1af0cc06112714483ae4af25fba1e9bd04">Clear</reimplements>
        <briefdescription>
<para>Clear (free all data) the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a945331227cdbc7889ede1070ef502b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Zeros</definition>
        <argsstring>()</argsstring>
        <name>Zeros</name>
        <reimplements refid="classrocalution_1_1_vector_1ac61cd2a27428d8cb0b7325697ab54883">Zeros</reimplements>
        <briefdescription>
<para>Set all values of the vector to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1aee43d40aa4bd9347aa7f4757244a6d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Ones</definition>
        <argsstring>()</argsstring>
        <name>Ones</name>
        <reimplements refid="classrocalution_1_1_vector_1aa979fabb41b06ca0413ca44fa8ffe714">Ones</reimplements>
        <briefdescription>
<para>Set all values of the vector to 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a0d05ce53b50b21bbb2b80215c60acbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::SetValues</definition>
        <argsstring>(ValueType val)</argsstring>
        <name>SetValues</name>
        <reimplements refid="classrocalution_1_1_vector_1a3df2b00c6da1ac2f35a577a31cbe98b1">SetValues</reimplements>
        <param>
          <type>ValueType</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set all values of the vector to given argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a4a78f0acd7f8479717e811a032b1c36b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::SetRandomUniform</definition>
        <argsstring>(unsigned long long seed, ValueType a=static_cast&lt; ValueType &gt;(-1), ValueType b=static_cast&lt; ValueType &gt;(1))</argsstring>
        <name>SetRandomUniform</name>
        <reimplements refid="classrocalution_1_1_vector_1aed60d50ff54c05fd3e2227109b8d3588">SetRandomUniform</reimplements>
        <param>
          <type>unsigned long long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>a</declname>
          <defval>static_cast&lt; ValueType &gt;(-1)</defval>
        </param>
        <param>
          <type>ValueType</type>
          <declname>b</declname>
          <defval>static_cast&lt; ValueType &gt;(1)</defval>
        </param>
        <briefdescription>
<para>Fill the vector with random values from interval [a,b]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a7385bcd27a52c94549a354799e23a7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::SetRandomNormal</definition>
        <argsstring>(unsigned long long seed, ValueType mean=static_cast&lt; ValueType &gt;(0), ValueType var=static_cast&lt; ValueType &gt;(1))</argsstring>
        <name>SetRandomNormal</name>
        <reimplements refid="classrocalution_1_1_vector_1ac0bb252680207ce70ab871f371007e5a">SetRandomNormal</reimplements>
        <param>
          <type>unsigned long long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>mean</declname>
          <defval>static_cast&lt; ValueType &gt;(0)</defval>
        </param>
        <param>
          <type>ValueType</type>
          <declname>var</declname>
          <defval>static_cast&lt; ValueType &gt;(1)</defval>
        </param>
        <briefdescription>
<para>Fill the vector with random values from normal distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a4f93a990c2b1a89bed6b8f69f965a729" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ReadFileASCII</definition>
        <argsstring>(const std::string filename)</argsstring>
        <name>ReadFileASCII</name>
        <reimplements refid="classrocalution_1_1_vector_1a35cefceac2c827b6f4a422113b06f3b5">ReadFileASCII</reimplements>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Read vector from ASCII file. </para>        </briefdescription>
        <detaileddescription>
<para>Read a vector from ASCII file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file containing the ASCII data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal">vec.ReadFileASCII(</highlight><highlight class="stringliteral">&quot;my_vector.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ae25cac3e31ae90cfb0ed6cd26a0b820c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::WriteFileASCII</definition>
        <argsstring>(const std::string filename) const</argsstring>
        <name>WriteFileASCII</name>
        <reimplements refid="classrocalution_1_1_vector_1adf8762b6ad93bcc19b87675c63a67752">WriteFileASCII</reimplements>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write vector to ASCII file. </para>        </briefdescription>
        <detaileddescription>
<para>Write a vector to ASCII file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to write the ASCII data to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>fill<sp/>vec</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.WriteFileASCII(</highlight><highlight class="stringliteral">&quot;my_vector.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a3ab863a463e4bfd2b1fc172ed9103c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ReadFileBinary</definition>
        <argsstring>(const std::string filename)</argsstring>
        <name>ReadFileBinary</name>
        <reimplements refid="classrocalution_1_1_vector_1ae669ca94b6b19929b2b8483063fc70d3">ReadFileBinary</reimplements>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Read vector from binary file. </para>        </briefdescription>
        <detaileddescription>
<para>Read a vector from binary file. For details on the format, see <ref refid="classrocalution_1_1_local_vector_1a9c753058a01044c092079eade04d9fb1" kindref="member">WriteFileBinary()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file containing the data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal">vec.ReadFileBinary(</highlight><highlight class="stringliteral">&quot;my_vector.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a9c753058a01044c092079eade04d9fb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::WriteFileBinary</definition>
        <argsstring>(const std::string filename) const</argsstring>
        <name>WriteFileBinary</name>
        <reimplements refid="classrocalution_1_1_vector_1ae03e3d74cf727f69bb1a8ca5d87d1fa7">WriteFileBinary</reimplements>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write vector to binary file. </para>        </briefdescription>
        <detaileddescription>
<para>Write a vector to binary file.</para><para>The binary format contains a header, the rocALUTION version and the vector data as follows <programlisting><codeline><highlight class="comment">//<sp/>Header</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#rocALUTION<sp/>binary<sp/>vector<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>rocALUTION<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">out.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;version,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vector<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">out.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">out.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)vec_val,<sp/>size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para><para><simplesect kind="note"><para><ref refid="classrocalution_1_1_vector" kindref="compound">Vector</ref> values array is always stored in double precision (e.g. double or std::complex&lt;double&gt;).</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to write the data to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>fill<sp/>vec</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec.WriteFileBinary(</highlight><highlight class="stringliteral">&quot;my_vector.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1abf2ee09b2fccba75add5ca106026cb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CopyFrom</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src)</argsstring>
        <name>CopyFrom</name>
        <reimplements refid="classrocalution_1_1_vector_1a0a69b9fd8f7263d1444c331e8ce18f8b">CopyFrom</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy vector from another vector. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>CopyFrom</computeroutput> copies values from another vector.</para><para><simplesect kind="note"><para>This function allows cross platform copying. One of the objects could be allocated on the accelerator backend.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrocalution_1_1_vector" kindref="compound">Vector</ref>, where values should be copied from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec1,<sp/>vec2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>initialize<sp/>vec1<sp/>and<sp/>vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>vec1<sp/>to<sp/>accelerator</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>vec1.MoveToAccelerator();</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now,<sp/>vec1<sp/>is<sp/>on<sp/>the<sp/>accelerator<sp/>(if<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>vec2<sp/>is<sp/>on<sp/>the<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>vec1<sp/>to<sp/>vec2<sp/>(or<sp/>vice<sp/>versa)<sp/>will<sp/>move<sp/>data<sp/>between<sp/>host<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>accelerator<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vec1.CopyFrom(vec2);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a13217124fbe9532f6ef14ae160fd427d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CopyFromAsync</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src)</argsstring>
        <name>CopyFromAsync</name>
        <reimplements refid="classrocalution_1_1_vector_1a19b74819ca4d2d4aba804b4b3882d33e">CopyFromAsync</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Async copy from another local vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a4d0ef0ba1b9ba78136a71199a7a6b734" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CopyFromFloat</definition>
        <argsstring>(const LocalVector&lt; float &gt; &amp;src)</argsstring>
        <name>CopyFromFloat</name>
        <reimplements refid="classrocalution_1_1_vector_1af85033a1ee476fde1a8e595bf820aee7">CopyFromFloat</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; float &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy values from another local float vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a0910f630662262bb111c30de3e07815b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CopyFromDouble</definition>
        <argsstring>(const LocalVector&lt; double &gt; &amp;src)</argsstring>
        <name>CopyFromDouble</name>
        <reimplements refid="classrocalution_1_1_vector_1a602f35cbb92908373b7eee02a097f006">CopyFromDouble</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; double &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy values from another local double vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a54ca27df605bb2c1567e3387ae7d57de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CopyFrom</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src, int src_offset, int dst_offset, int size)</argsstring>
        <name>CopyFrom</name>
        <reimplements refid="classrocalution_1_1_vector_1a6a1781254d8a3d8a39c4624741babfb4">CopyFrom</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Copy vector from another vector with offsets and size. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>CopyFrom</computeroutput> copies values with specific source and destination offsets and sizes from another vector.</para><para><simplesect kind="note"><para>This function allows cross platform copying. One of the objects could be allocated on the accelerator backend.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrocalution_1_1_vector" kindref="compound">Vector</ref>, where values should be copied from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>source offset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>destination offset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of entries to be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a8bb052f38c9d5c2af40a7eeda2ace780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::CopyFromPermute</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src, const LocalVector&lt; int &gt; &amp;permutation)</argsstring>
        <name>CopyFromPermute</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <briefdescription>
<para>Copy a vector under permutation (forward permutation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a571cffb9722df69bebeb854cd05d041a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::CopyFromPermuteBackward</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src, const LocalVector&lt; int &gt; &amp;permutation)</argsstring>
        <name>CopyFromPermuteBackward</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <briefdescription>
<para>Copy a vector under permutation (backward permutation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a9eeae5cca8f0af5c5723510b1b280e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::CloneFrom</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;src)</argsstring>
        <name>CloneFrom</name>
        <reimplements refid="classrocalution_1_1_vector_1a6c78a236e9c0b9ffefd237d8a76e5b8a">CloneFrom</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Clone the vector. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>CloneFrom</computeroutput> clones the entire vector, including data and backend descriptor from another <ref refid="classrocalution_1_1_vector" kindref="compound">Vector</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrocalution_1_1_vector" kindref="compound">Vector</ref> to clone from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>vec;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>initialize<sp/>vec<sp/>(host<sp/>or<sp/>accelerator)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">LocalVector&lt;ValueType&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>cloning<sp/>vec,<sp/>tmp<sp/>will<sp/>have<sp/>identical<sp/>values<sp/>and<sp/>will<sp/>be<sp/>on<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>backend<sp/>as<sp/>vec</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tmp.CloneFrom(vec);</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1acecc27f2c96f010bb8f43749f1f643ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::CopyFromData</definition>
        <argsstring>(const ValueType *data)</argsstring>
        <name>CopyFromData</name>
        <param>
          <type>const ValueType *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy (import) vector. </para>        </briefdescription>
        <detaileddescription>
<para>Copy (import) vector data that is described in one array (values). The object data has to be allocated with <ref refid="classrocalution_1_1_local_vector_1ae9ad82b77b1fa3f94112092d69354a15" kindref="member">Allocate()</ref>, using the corresponding size of the data, first.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be imported. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1aad7c0fe9094784b24ca6fd1be7749e64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::CopyToData</definition>
        <argsstring>(ValueType *data) const</argsstring>
        <name>CopyToData</name>
        <param>
          <type>ValueType *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy (export) vector. </para>        </briefdescription>
        <detaileddescription>
<para>Copy (export) vector data that is described in one array (values). The output array has to be allocated, using the corresponding size of the data, first. Size can be obtain by <ref refid="classrocalution_1_1_vector_1a69a7295c57e35e030999c5764c05cfe7" kindref="member">GetSize()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>exported data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a92e2ca6e5fa325feda519fe53cbce6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::Permute</definition>
        <argsstring>(const LocalVector&lt; int &gt; &amp;permutation)</argsstring>
        <name>Permute</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <briefdescription>
<para>Perform in-place permutation (forward) of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a8d9df926f49cde234e10bfc4f7c14502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::PermuteBackward</definition>
        <argsstring>(const LocalVector&lt; int &gt; &amp;permutation)</argsstring>
        <name>PermuteBackward</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <briefdescription>
<para>Perform in-place permutation (backward) of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ac177710b65d6c47db97b1c7040d8afda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::Restriction</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;vec_fine, const LocalVector&lt; int &gt; &amp;map)</argsstring>
        <name>Restriction</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>vec_fine</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Restriction operator based on restriction mapping vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a8b786211344f28ea1f88bdd4a9a79399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::Prolongation</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;vec_coarse, const LocalVector&lt; int &gt; &amp;map)</argsstring>
        <name>Prolongation</name>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>vec_coarse</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; int &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Prolongation operator based on restriction mapping vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a83e7f8e6a99c29cf727a0782e2674bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::AddScale</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;x, ValueType alpha)</argsstring>
        <name>AddScale</name>
        <reimplements refid="classrocalution_1_1_vector_1ae1f6dd2e39e233b808101a0072a1db62">AddScale</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Perform vector update of type this = this + alpha * x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a36c52c8148cdf904e89fabbb034246de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ScaleAdd</definition>
        <argsstring>(ValueType alpha, const LocalVector&lt; ValueType &gt; &amp;x)</argsstring>
        <name>ScaleAdd</name>
        <reimplements refid="classrocalution_1_1_vector_1aec3e1f31e60d088aa021160d12e3ecd7">ScaleAdd</reimplements>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Perform vector update of type this = alpha * this + x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ad6f3ce6d5490f5a131eb6d417cdeea5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ScaleAddScale</definition>
        <argsstring>(ValueType alpha, const LocalVector&lt; ValueType &gt; &amp;x, ValueType beta)</argsstring>
        <name>ScaleAddScale</name>
        <reimplements refid="classrocalution_1_1_vector_1a4927a1c7ed1b32a7c1bfaa5e8ba260e2">ScaleAddScale</reimplements>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Perform vector update of type this = alpha * this + x * beta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a678bc1b7f566cca0f8548a4cc806d4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ScaleAddScale</definition>
        <argsstring>(ValueType alpha, const LocalVector&lt; ValueType &gt; &amp;x, ValueType beta, int src_offset, int dst_offset, int size)</argsstring>
        <name>ScaleAddScale</name>
        <reimplements refid="classrocalution_1_1_vector_1a7a14ed1246d3c835794c6c6f3a4b80c1">ScaleAddScale</reimplements>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Perform vector update of type this = alpha * this + x * beta with offsets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a789b6b7874da73bdd5e6698fec222a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::ScaleAdd2</definition>
        <argsstring>(ValueType alpha, const LocalVector&lt; ValueType &gt; &amp;x, ValueType beta, const LocalVector&lt; ValueType &gt; &amp;y, ValueType gamma)</argsstring>
        <name>ScaleAdd2</name>
        <reimplements refid="classrocalution_1_1_vector_1ace75caff6cab8ebcc6dbbbe10ac38fad">ScaleAdd2</reimplements>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Perform vector update of type this = alpha * this + x * beta + y * gamma. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a88b8838c303c6f0c43c763264fdad077" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Scale</definition>
        <argsstring>(ValueType alpha)</argsstring>
        <name>Scale</name>
        <reimplements refid="classrocalution_1_1_vector_1ad00973260f6b2ca585220060fa8f074c">Scale</reimplements>
        <param>
          <type>ValueType</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Perform vector scaling this = alpha * this. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1abfe1184d8f1432b03e2b42546273f11d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ValueType</type>
        <definition>virtual ValueType rocalution::LocalVector&lt; ValueType &gt;::Dot</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;x) const</argsstring>
        <name>Dot</name>
        <reimplements refid="classrocalution_1_1_vector_1a4b8794f97529984f9eb0be2532e7a452">Dot</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Compute dot (scalar) product, return this^T y. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a5aa5910bdca4e1102e8d31af8d7e29a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ValueType</type>
        <definition>virtual ValueType rocalution::LocalVector&lt; ValueType &gt;::DotNonConj</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;x) const</argsstring>
        <name>DotNonConj</name>
        <reimplements refid="classrocalution_1_1_vector_1afc0de1e6246fb0a5e9a6b0bbaf481727">DotNonConj</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Compute non-conjugate dot (scalar) product, return this^T y. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a1941030d968ef965f8cf2abb864cbd0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ValueType</type>
        <definition>virtual ValueType rocalution::LocalVector&lt; ValueType &gt;::Norm</definition>
        <argsstring>(void) const</argsstring>
        <name>Norm</name>
        <reimplements refid="classrocalution_1_1_vector_1ae497a40ab0a3c1b7927e53b856775d96">Norm</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute <formula id="1">$L_2$</formula> norm of the vector, return = srqt(this^T this) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a49e4cfe29ae2e155ff4b79d7e907b71c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ValueType</type>
        <definition>virtual ValueType rocalution::LocalVector&lt; ValueType &gt;::Reduce</definition>
        <argsstring>(void) const</argsstring>
        <name>Reduce</name>
        <reimplements refid="classrocalution_1_1_vector_1a2fdb72cd02801525457e9ada7dd60ef2">Reduce</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reduce the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a781d7827180d02a253b59698f6228863" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ValueType</type>
        <definition>virtual ValueType rocalution::LocalVector&lt; ValueType &gt;::Asum</definition>
        <argsstring>(void) const</argsstring>
        <name>Asum</name>
        <reimplements refid="classrocalution_1_1_vector_1adcd00282279cb53befa5b684cfe1b810">Asum</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the sum of absolute values of the vector, return = sum(|this|) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a20c79273550b3a82a409ef3cbcbc7e6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int rocalution::LocalVector&lt; ValueType &gt;::Amax</definition>
        <argsstring>(ValueType &amp;value) const</argsstring>
        <name>Amax</name>
        <reimplements refid="classrocalution_1_1_vector_1ad12fff786a24c4d5fccb452dea303767">Amax</reimplements>
        <param>
          <type>ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute the absolute max of the vector, return = index(max(|this|)) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ac1369d49e5715c4b75e52ccca7f368a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::PointWiseMult</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;x)</argsstring>
        <name>PointWiseMult</name>
        <reimplements refid="classrocalution_1_1_vector_1a228c4dbf9570eb0e3ac63abf02ec2192">PointWiseMult</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Perform point-wise multiplication (element-wise) of this = this * x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1abc0e63a78bd3ca01505986783c815736" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::PointWiseMult</definition>
        <argsstring>(const LocalVector&lt; ValueType &gt; &amp;x, const LocalVector&lt; ValueType &gt; &amp;y)</argsstring>
        <name>PointWiseMult</name>
        <reimplements refid="classrocalution_1_1_vector_1a994a38ea43f642b09d11803ba126ca21">PointWiseMult</reimplements>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Perform point-wise multiplication (element-wise) of this = x * y. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a203456f8c05ce0af1993f9465f1908ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rocalution::LocalVector&lt; ValueType &gt;::Power</definition>
        <argsstring>(double power)</argsstring>
        <name>Power</name>
        <reimplements refid="classrocalution_1_1_vector_1ae7401d8c41da9c2d9977eaa26f56a9cc">Power</reimplements>
        <param>
          <type>double</type>
          <declname>power</declname>
        </param>
        <briefdescription>
<para>Perform power operation to a vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a7f57311a7117ebd71f0047b929a29ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::SetIndexArray</definition>
        <argsstring>(int size, const int *index)</argsstring>
        <name>SetIndexArray</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set index array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1acf3ca0c6d88caa78a3fd7e87b7ccd360" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::GetIndexValues</definition>
        <argsstring>(ValueType *values) const</argsstring>
        <name>GetIndexValues</name>
        <param>
          <type>ValueType *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Get indexed values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a4b8bc1b9e3f0ea7a2382d4174f520de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::SetIndexValues</definition>
        <argsstring>(const ValueType *values)</argsstring>
        <name>SetIndexValues</name>
        <param>
          <type>const ValueType *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Set indexed values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a8dfec518f2b82a365a8b6802bfc01ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::GetContinuousValues</definition>
        <argsstring>(int start, int end, ValueType *values) const</argsstring>
        <name>GetContinuousValues</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Get continuous indexed values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a28a42f5430f54fec8be7b4bd6d084f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::SetContinuousValues</definition>
        <argsstring>(int start, int end, const ValueType *values)</argsstring>
        <name>SetContinuousValues</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const ValueType *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Set continuous indexed values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1af166cb6cfd14a2eb0d35eb08bbe21329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::ExtractCoarseMapping</definition>
        <argsstring>(int start, int end, const int *index, int nc, int *size, int *map) const</argsstring>
        <name>ExtractCoarseMapping</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Extract coarse boundary mapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a3814baf9e0a6ee7ff7cda823a71a2b67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rocalution::LocalVector&lt; ValueType &gt;::ExtractCoarseBoundary</definition>
        <argsstring>(int start, int end, const int *index, int nc, int *size, int *boundary) const</argsstring>
        <name>ExtractCoarseBoundary</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>boundary</declname>
        </param>
        <briefdescription>
<para>Extract coarse boundary index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="288" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1aeacc3a01597143a1f1f0d741eab7abde" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const LocalVector&lt;ValueType&gt;&amp; rocalution::LocalVector&lt; ValueType &gt;::GetInterior</definition>
        <argsstring>() const</argsstring>
        <name>GetInterior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1a2fc99dadb5f2ba7bbd6de62ef4f4a8ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref>&lt; ValueType &gt; &amp;</type>
        <definition>LocalVector&lt;ValueType&gt;&amp; rocalution::LocalVector&lt; ValueType &gt;::GetInterior</definition>
        <argsstring>()</argsstring>
        <name>GetInterior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1afbdf8d167e9e7b2b0b9de28ddd79fca9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rocalution::LocalVector&lt; ValueType &gt;::is_host_</definition>
        <argsstring>(void) const</argsstring>
        <name>is_host_</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a4bf61bf87e25d66b63187e21d00e4f2d">is_host_</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return true if the object is on the host. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_local_vector_1ace8f5b57d245fe498a5e4c97be7f5355" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rocalution::LocalVector&lt; ValueType &gt;::is_accel_</definition>
        <argsstring>(void) const</argsstring>
        <name>is_accel_</name>
        <reimplements refid="classrocalution_1_1_base_rocalution_1a3fd4724cb23b135d6b6528674c3aec14">is_accel_</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return true if the object is on the accelerator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/base/local_vector.hpp" line="293" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> is called local, because it will always stay on a single system. The system can contain several CPUs via UMA or NUMA memory system or it can contain an accelerator.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>- can be int, float, double, std::complex&lt;float&gt; and std::complex&lt;double&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="427">
        <label>rocalution::BaseRocalution&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_base_rocalution"/>
        <childnode refid="428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="426">
        <label>rocalution::Vector&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_vector"/>
        <childnode refid="427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="425">
        <label>rocalution::LocalVector&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_local_vector"/>
        <childnode refid="426" relation="public-inheritance">
        </childnode>
      </node>
      <node id="428">
        <label>rocalution::RocalutionObj</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="431">
        <label>rocalution::BaseRocalution&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_base_rocalution"/>
        <childnode refid="432" relation="public-inheritance">
        </childnode>
      </node>
      <node id="430">
        <label>rocalution::Vector&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_vector"/>
        <childnode refid="431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="429">
        <label>rocalution::LocalVector&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_local_vector"/>
        <childnode refid="430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="432">
        <label>rocalution::RocalutionObj</label>
      </node>
    </collaborationgraph>
    <location file="/home/tcs/rocALUTION/src/base/operator.hpp" line="39" column="1" bodyfile="/home/tcs/rocALUTION/src/base/operator.hpp" bodystart="39" bodyend="-1"/>
    <listofallmembers>
      <member refid="classrocalution_1_1_local_vector_1a83e7f8e6a99c29cf727a0782e2674bba" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>AddScale</name></member>
      <member refid="classrocalution_1_1_vector_1aedf4d64ae2c3b8ee1f37519f306d0041" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>AddScale</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae9ad82b77b1fa3f94112092d69354a15" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>Allocate</name></member>
      <member refid="classrocalution_1_1_local_vector_1a20c79273550b3a82a409ef3cbcbc7e6b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Amax</name></member>
      <member refid="classrocalution_1_1_local_vector_1a781d7827180d02a253b59698f6228863" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Asum</name></member>
      <member refid="classrocalution_1_1_base_rocalution_1ad248c147237baaf809978dba69edf342" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>BaseRocalution</name></member>
      <member refid="classrocalution_1_1_local_vector_1a83a0ca326ebe939dac9cea93022dc663" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Check</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae58d9c9b346f80079f4028108b8dfdb2" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Clear</name></member>
      <member refid="classrocalution_1_1_base_rocalution_1a85acdb9844b7c6a630f14ace59d99f5d" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CloneBackend</name></member>
      <member refid="classrocalution_1_1_local_vector_1a9eeae5cca8f0af5c5723510b1b280e60" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CloneFrom</name></member>
      <member refid="classrocalution_1_1_vector_1ab620189a4e55cd97bf86478ff0df6c3f" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>CloneFrom</name></member>
      <member refid="classrocalution_1_1_local_vector_1abf2ee09b2fccba75add5ca106026cb25" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CopyFrom</name></member>
      <member refid="classrocalution_1_1_local_vector_1a54ca27df605bb2c1567e3387ae7d57de" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CopyFrom</name></member>
      <member refid="classrocalution_1_1_vector_1a32a36abf74009fabb2af1f5250649680" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>CopyFrom</name></member>
      <member refid="classrocalution_1_1_local_vector_1a13217124fbe9532f6ef14ae160fd427d" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CopyFromAsync</name></member>
      <member refid="classrocalution_1_1_local_vector_1acecc27f2c96f010bb8f43749f1f643ce" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>CopyFromData</name></member>
      <member refid="classrocalution_1_1_local_vector_1a0910f630662262bb111c30de3e07815b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CopyFromDouble</name></member>
      <member refid="classrocalution_1_1_local_vector_1a4d0ef0ba1b9ba78136a71199a7a6b734" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>CopyFromFloat</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8bb052f38c9d5c2af40a7eeda2ace780" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>CopyFromPermute</name></member>
      <member refid="classrocalution_1_1_local_vector_1a571cffb9722df69bebeb854cd05d041a" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>CopyFromPermuteBackward</name></member>
      <member refid="classrocalution_1_1_local_vector_1aad7c0fe9094784b24ca6fd1be7749e64" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>CopyToData</name></member>
      <member refid="classrocalution_1_1_local_vector_1abfe1184d8f1432b03e2b42546273f11d" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Dot</name></member>
      <member refid="classrocalution_1_1_vector_1ab43c0f9c89802ced75ac7e3b248cc798" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>Dot</name></member>
      <member refid="classrocalution_1_1_local_vector_1a5aa5910bdca4e1102e8d31af8d7e29a4" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>DotNonConj</name></member>
      <member refid="classrocalution_1_1_vector_1a6ff165b83b46e200e76cef9be9fc3505" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>DotNonConj</name></member>
      <member refid="classrocalution_1_1_local_vector_1a3814baf9e0a6ee7ff7cda823a71a2b67" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>ExtractCoarseBoundary</name></member>
      <member refid="classrocalution_1_1_local_vector_1af166cb6cfd14a2eb0d35eb08bbe21329" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>ExtractCoarseMapping</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8dfec518f2b82a365a8b6802bfc01ac8" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GetContinuousValues</name></member>
      <member refid="classrocalution_1_1_vector_1abd0787513f949d91f445890ea4d2ce81" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>GetGhostSize</name></member>
      <member refid="classrocalution_1_1_local_vector_1acf3ca0c6d88caa78a3fd7e87b7ccd360" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GetIndexValues</name></member>
      <member refid="classrocalution_1_1_local_vector_1aeacc3a01597143a1f1f0d741eab7abde" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GetInterior</name></member>
      <member refid="classrocalution_1_1_local_vector_1a2fc99dadb5f2ba7bbd6de62ef4f4a8ce" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GetInterior</name></member>
      <member refid="classrocalution_1_1_vector_1af4e80d10bbfd9a243d0dfa3a5481358c" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>GetLocalSize</name></member>
      <member refid="classrocalution_1_1_local_vector_1a42d48bb3bb6a89218ede8fcff7bbc644" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>GetSize</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1a4bba5aeaf4fd705efc00402f1f6ed40b" prot="protected" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>global_obj_id_</name></member>
      <member refid="classrocalution_1_1_local_vector_1a350700fdc95d2918442f14af47bb3ff4" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GlobalMatrix&lt; ValueType &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1ad50ce751e5dafbeb3ca73c65cd542fce" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>GlobalVector&lt; ValueType &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a174999811741be695665554df732aa0b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Info</name></member>
      <member refid="classrocalution_1_1_local_vector_1ace8f5b57d245fe498a5e4c97be7f5355" prot="protected" virt="virtual"><scope>rocalution::LocalVector</scope><name>is_accel_</name></member>
      <member refid="classrocalution_1_1_local_vector_1afbdf8d167e9e7b2b0b9de28ddd79fca9" prot="protected" virt="virtual"><scope>rocalution::LocalVector</scope><name>is_host_</name></member>
      <member refid="classrocalution_1_1_local_vector_1a9400481562559c79b10346b8af097e9f" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LeaveDataPtr</name></member>
      <member refid="classrocalution_1_1_local_vector_1ac25414b59f0a5cf064e05213a5911a13" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalMatrix&lt; double &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a249687a6b0f164407332088fe0b7a78a" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalMatrix&lt; float &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a9165d56ef03f0ed265f5886e6eba2ec3" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalMatrix&lt; std::complex&lt; double &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae8b5abfac229493f26dba8f51d7c9178" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalMatrix&lt; std::complex&lt; float &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1af6b5193a9183697399f1cfe579f62ce8" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalMatrix&lt; ValueType &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8e6e6047a29b30dafd58a02c2e948729" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalStencil&lt; double &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a11a2b915fe0ab350b280035d273ebc66" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalStencil&lt; float &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1aeb080fc94d1a8c4450fe8512fa01c0b5" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalStencil&lt; std::complex&lt; double &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a047ad5fb04fd8368e63e76453e185b21" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalStencil&lt; std::complex&lt; float &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a39865280e6b5328820ff7d0fcea81b1f" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector</name></member>
      <member refid="classrocalution_1_1_local_vector_1ac92816b5a161c95a8ffbf20b7f730c23" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector&lt; double &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a337d67c1a4d80c8882f68d2b6e595de6" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector&lt; float &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a2021b5a4bc5f656cc48f4e97525fc3b5" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector&lt; int &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1af1c5280637f849dba6fd35f668596e65" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector&lt; std::complex&lt; double &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1a07c8dff4d321117f082e9ea978bcf44d" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>LocalVector&lt; std::complex&lt; float &gt; &gt;</name></member>
      <member refid="classrocalution_1_1_local_vector_1afffc0e56391b45874224e7003dca6076" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>MoveToAccelerator</name></member>
      <member refid="classrocalution_1_1_local_vector_1a826bebed1f7008efcb99551e1fb0093e" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>MoveToAcceleratorAsync</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae3120701431e40e505554e98f55df533" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>MoveToHost</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8370ff1b9f590254ec0e8f4c28e1f7b3" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>MoveToHostAsync</name></member>
      <member refid="classrocalution_1_1_local_vector_1a1941030d968ef965f8cf2abb864cbd0d" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Norm</name></member>
      <member refid="classrocalution_1_1_base_rocalution_1a5d818c77bc906d543c44d441bb589b46" prot="protected" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>object_name_</name></member>
      <member refid="classrocalution_1_1_local_vector_1aee43d40aa4bd9347aa7f4757244a6d8e" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Ones</name></member>
      <member refid="classrocalution_1_1_local_vector_1a20913b1560bec91831c49351530d34e8" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>operator[]</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae584b51e9e91a17b5aeb5750cfd1d8d9" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>operator[]</name></member>
      <member refid="classrocalution_1_1_local_vector_1a92e2ca6e5fa325feda519fe53cbce6d0" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>Permute</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8d9df926f49cde234e10bfc4f7c14502" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>PermuteBackward</name></member>
      <member refid="classrocalution_1_1_local_vector_1ac1369d49e5715c4b75e52ccca7f368a7" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>PointWiseMult</name></member>
      <member refid="classrocalution_1_1_local_vector_1abc0e63a78bd3ca01505986783c815736" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>PointWiseMult</name></member>
      <member refid="classrocalution_1_1_vector_1a3d32315bcad3563dd1d7b793890fbad6" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>PointWiseMult</name></member>
      <member refid="classrocalution_1_1_vector_1a5c540c12372d286b3de900937e0af809" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>PointWiseMult</name></member>
      <member refid="classrocalution_1_1_local_vector_1a203456f8c05ce0af1993f9465f1908ac" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Power</name></member>
      <member refid="classrocalution_1_1_local_vector_1a8b786211344f28ea1f88bdd4a9a79399" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>Prolongation</name></member>
      <member refid="classrocalution_1_1_local_vector_1a4f93a990c2b1a89bed6b8f69f965a729" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ReadFileASCII</name></member>
      <member refid="classrocalution_1_1_local_vector_1a3ab863a463e4bfd2b1fc172ed9103c29" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ReadFileBinary</name></member>
      <member refid="classrocalution_1_1_local_vector_1a49e4cfe29ae2e155ff4b79d7e907b71c" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Reduce</name></member>
      <member refid="classrocalution_1_1_local_vector_1ac177710b65d6c47db97b1c7040d8afda" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>Restriction</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1ad60a8b2047aad74e488c552264fa7737" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>RocalutionObj</name></member>
      <member refid="classrocalution_1_1_local_vector_1a88b8838c303c6f0c43c763264fdad077" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Scale</name></member>
      <member refid="classrocalution_1_1_local_vector_1a36c52c8148cdf904e89fabbb034246de" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ScaleAdd</name></member>
      <member refid="classrocalution_1_1_vector_1a9edf57a13c5aa7a01e6f86d84f382e66" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>ScaleAdd</name></member>
      <member refid="classrocalution_1_1_local_vector_1a789b6b7874da73bdd5e6698fec222a91" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ScaleAdd2</name></member>
      <member refid="classrocalution_1_1_vector_1ae85d99b6f2ba4f0f072d3f2ce3c59ea4" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>ScaleAdd2</name></member>
      <member refid="classrocalution_1_1_local_vector_1ad6f3ce6d5490f5a131eb6d417cdeea5b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ScaleAddScale</name></member>
      <member refid="classrocalution_1_1_local_vector_1a678bc1b7f566cca0f8548a4cc806d4f5" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>ScaleAddScale</name></member>
      <member refid="classrocalution_1_1_vector_1a390c2cc8415eaa3959622254194a48f8" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>ScaleAddScale</name></member>
      <member refid="classrocalution_1_1_vector_1a4f710bdf88c54847a0c524715c129e83" prot="public" virt="virtual" ambiguityscope="rocalution::Vector::"><scope>rocalution::LocalVector</scope><name>ScaleAddScale</name></member>
      <member refid="classrocalution_1_1_local_vector_1a28a42f5430f54fec8be7b4bd6d084f01" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>SetContinuousValues</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae189cd6c550d72df04f2e7a15c9a5d4a" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>SetDataPtr</name></member>
      <member refid="classrocalution_1_1_local_vector_1a7f57311a7117ebd71f0047b929a29ebb" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>SetIndexArray</name></member>
      <member refid="classrocalution_1_1_local_vector_1a4b8bc1b9e3f0ea7a2382d4174f520de6" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>SetIndexValues</name></member>
      <member refid="classrocalution_1_1_local_vector_1a7385bcd27a52c94549a354799e23a7f9" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>SetRandomNormal</name></member>
      <member refid="classrocalution_1_1_local_vector_1a4a78f0acd7f8479717e811a032b1c36b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>SetRandomUniform</name></member>
      <member refid="classrocalution_1_1_local_vector_1a0d05ce53b50b21bbb2b80215c60acbdc" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>SetValues</name></member>
      <member refid="classrocalution_1_1_local_vector_1aed0b8ba7c4968cddd589b4605b63120b" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Sync</name></member>
      <member refid="classrocalution_1_1_vector_1ab7cc8dac1aaae183de2a26b9f2e891a1" prot="public" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>Vector</name></member>
      <member refid="classrocalution_1_1_local_vector_1a727a6a2779ff9706494503148692945a" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>vector_</name></member>
      <member refid="classrocalution_1_1_local_vector_1a2d0a61bac246791efe423eabf4da0882" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>vector_accel_</name></member>
      <member refid="classrocalution_1_1_local_vector_1a0604a42470b999f35279350a1d25beea" prot="private" virt="non-virtual"><scope>rocalution::LocalVector</scope><name>vector_host_</name></member>
      <member refid="classrocalution_1_1_local_vector_1ae25cac3e31ae90cfb0ed6cd26a0b820c" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>WriteFileASCII</name></member>
      <member refid="classrocalution_1_1_local_vector_1a9c753058a01044c092079eade04d9fb1" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>WriteFileBinary</name></member>
      <member refid="classrocalution_1_1_local_vector_1a945331227cdbc7889ede1070ef502b81" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>Zeros</name></member>
      <member refid="classrocalution_1_1_base_rocalution_1aad8ac3188091c4683181bfe6d739b7fd" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>~BaseRocalution</name></member>
      <member refid="classrocalution_1_1_local_vector_1a9d3f36859ea4d3e70ac03c8d180f82bd" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>~LocalVector</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1a55a2f93f798cebdda6343b20db959e2d" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>~RocalutionObj</name></member>
      <member refid="classrocalution_1_1_vector_1a1a5d1bd49e7ce33f80f1f71e9e681818" prot="public" virt="virtual"><scope>rocalution::LocalVector</scope><name>~Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
