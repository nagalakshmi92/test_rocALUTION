<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrocalution_1_1_direct_linear_solver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>rocalution::DirectLinearSolver</compoundname>
    <basecompoundref refid="classrocalution_1_1_solver" prot="public" virt="non-virtual">rocalution::Solver&lt; OperatorType, VectorType, ValueType &gt;</basecompoundref>
    <derivedcompoundref refid="classrocalution_1_1_inversion" prot="public" virt="non-virtual">rocalution::Inversion&lt; OperatorType, VectorType, ValueType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classrocalution_1_1_l_u" prot="public" virt="non-virtual">rocalution::LU&lt; OperatorType, VectorType, ValueType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classrocalution_1_1_q_r" prot="public" virt="non-virtual">rocalution::QR&lt; OperatorType, VectorType, ValueType &gt;</derivedcompoundref>
    <includes refid="solver_8hpp" local="no">solver.hpp</includes>
    <templateparamlist>
      <param>
        <type>class OperatorType</type>
      </param>
      <param>
        <type>class VectorType</type>
      </param>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrocalution_1_1_direct_linear_solver_1adef97b269c9e61a15eef4d648bc85f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;::DirectLinearSolver</definition>
        <argsstring>()</argsstring>
        <name>DirectLinearSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="344" column="1" bodyfile="/home/tcs/rocALUTION/src/solvers/solver.cpp" bodystart="622" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_direct_linear_solver_1a36be7fcc66dbafa71da5fd50aa25ecc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;::~DirectLinearSolver</definition>
        <argsstring>()</argsstring>
        <name>~DirectLinearSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="345" column="1" bodyfile="/home/tcs/rocALUTION/src/solvers/solver.cpp" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_direct_linear_solver_1a4feccca7c61e39e8f5628767f2a86c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;::Verbose</definition>
        <argsstring>(int verb=1)</argsstring>
        <name>Verbose</name>
        <reimplements refid="classrocalution_1_1_solver_1aa2ab9c17de96add5e3ad30e7cabf0ea7">Verbose</reimplements>
        <param>
          <type>int</type>
          <declname>verb</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Provide verbose output of the solver. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>verb = 0 -&gt; no output</para></listitem><listitem><para>verb = 1 -&gt; print info about the solver (start, end);</para></listitem><listitem><para>verb = 2 -&gt; print (iter, residual) via iteration control; </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="347" column="1" bodyfile="/home/tcs/rocALUTION/src/solvers/solver.cpp" bodystart="636" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classrocalution_1_1_direct_linear_solver_1ae8295100cd76f64ff83efd8024a48728" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;::Solve</definition>
        <argsstring>(const VectorType &amp;rhs, VectorType *x)</argsstring>
        <name>Solve</name>
        <reimplements refid="classrocalution_1_1_solver_1a69025eb1d2bc7f1266899c2739c82725">Solve</reimplements>
        <param>
          <type>const VectorType &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>VectorType *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Solve <ref refid="classrocalution_1_1_operator" kindref="compound">Operator</ref> x = rhs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="349" column="1" bodyfile="/home/tcs/rocALUTION/src/solvers/solver.cpp" bodystart="644" bodyend="665"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrocalution_1_1_direct_linear_solver_1abad2f9333921b2e2faea18b144e13a87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;::Solve_</definition>
        <argsstring>(const VectorType &amp;rhs, VectorType *x)=0</argsstring>
        <name>Solve_</name>
        <reimplementedby refid="classrocalution_1_1_inversion_1a25de1f348f05556e5b57a007051f2759">Solve_</reimplementedby>
        <reimplementedby refid="classrocalution_1_1_q_r_1ab7b665e9dff538407f30bd3dc4b2e8b2">Solve_</reimplementedby>
        <reimplementedby refid="classrocalution_1_1_l_u_1a74a02f4555468fb7644e2cfaeda9171a">Solve_</reimplementedby>
        <param>
          <type>const VectorType &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>VectorType *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Solve <ref refid="classrocalution_1_1_operator" kindref="compound">Operator</ref> x = rhs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="353" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all direct linear solvers. </para>    </briefdescription>
    <detaileddescription>
<para>The library provides three direct methods - <ref refid="classrocalution_1_1_l_u" kindref="compound">LU</ref>, <ref refid="classrocalution_1_1_q_r" kindref="compound">QR</ref> and <ref refid="classrocalution_1_1_inversion" kindref="compound">Inversion</ref> (based on <ref refid="classrocalution_1_1_q_r" kindref="compound">QR</ref> decomposition). The user can pass a sparse matrix, internally it will be converted to dense and then the selected method will be applied. These methods are not very optimal and due to the fact that the matrix is converted to a dense format, these methods should be used only for very small matrices.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OperatorType</parametername>
</parameternamelist>
<parameterdescription>
<para>- can be <ref refid="classrocalution_1_1_local_matrix" kindref="compound">LocalMatrix</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VectorType</parametername>
</parameternamelist>
<parameterdescription>
<para>- can be <ref refid="classrocalution_1_1_local_vector" kindref="compound">LocalVector</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>- can be float, double, std::complex&lt;float&gt; or std::complex&lt;double&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="186">
        <label>rocalution::Inversion&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_inversion"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="188">
        <label>rocalution::QR&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_q_r"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="183">
        <label>rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_direct_linear_solver"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="184">
        <label>rocalution::Solver&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_solver"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>rocalution::LU&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_l_u"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="185">
        <label>rocalution::RocalutionObj</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="193">
        <label>rocalution::Vector&lt; int &gt;</label>
        <link refid="classrocalution_1_1_vector"/>
        <childnode refid="194" relation="public-inheritance">
        </childnode>
      </node>
      <node id="194">
        <label>rocalution::BaseRocalution&lt; ValueType &gt;</label>
        <link refid="classrocalution_1_1_base_rocalution"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
      </node>
      <node id="189">
        <label>rocalution::DirectLinearSolver&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_direct_linear_solver"/>
        <childnode refid="190" relation="public-inheritance">
        </childnode>
      </node>
      <node id="190">
        <label>rocalution::Solver&lt; OperatorType, VectorType, ValueType &gt;</label>
        <link refid="classrocalution_1_1_solver"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
        <childnode refid="192" relation="usage">
          <edgelabel>permutation_</edgelabel>
        </childnode>
        <childnode refid="195" relation="usage">
          <edgelabel>op_</edgelabel>
        </childnode>
      </node>
      <node id="192">
        <label>rocalution::LocalVector&lt; int &gt;</label>
        <link refid="classrocalution_1_1_local_vector"/>
        <childnode refid="193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="191">
        <label>rocalution::RocalutionObj</label>
      </node>
      <node id="195">
        <label>OperatorType</label>
      </node>
    </collaborationgraph>
    <location file="/home/tcs/rocALUTION/src/solvers/solver.hpp" line="342" column="1" bodyfile="/home/tcs/rocALUTION/src/solvers/solver.hpp" bodystart="341" bodyend="354"/>
    <listofallmembers>
      <member refid="classrocalution_1_1_solver_1a84754d7422ad3fb35c17c61f0a609c7a" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>Build</name></member>
      <member refid="classrocalution_1_1_solver_1a64924a0c87d60d2e4bf9fa295d0152cb" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>build_</name></member>
      <member refid="classrocalution_1_1_solver_1a0d11ee9943f785db285f0ef5c08c64eb" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>BuildMoveToAcceleratorAsync</name></member>
      <member refid="classrocalution_1_1_solver_1aa8839d3ba527d75fedd29fdbe9bd651f" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>Clear</name></member>
      <member refid="classrocalution_1_1_direct_linear_solver_1adef97b269c9e61a15eef4d648bc85f18" prot="public" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>DirectLinearSolver</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1a4bba5aeaf4fd705efc00402f1f6ed40b" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>global_obj_id_</name></member>
      <member refid="classrocalution_1_1_solver_1ab1b6410cd134c9ad00c1851d400cf0f8" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>MoveToAccelerator</name></member>
      <member refid="classrocalution_1_1_solver_1a8ce29de0bdda9f35a6a687fd06ac9b11" prot="protected" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>MoveToAcceleratorLocalData_</name></member>
      <member refid="classrocalution_1_1_solver_1a3c263e65898816f5838184c0af78a044" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>MoveToHost</name></member>
      <member refid="classrocalution_1_1_solver_1aa1e8be1bd2107543c7390a81f8cee8cb" prot="protected" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>MoveToHostLocalData_</name></member>
      <member refid="classrocalution_1_1_solver_1ad338b5f99cf339fb33218dd8b958cac4" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>op_</name></member>
      <member refid="classrocalution_1_1_solver_1ac46ab4d19fba48ece463666d37a7dc86" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>permutation_</name></member>
      <member refid="classrocalution_1_1_solver_1a2acdb829fa657a7b3e680d1ee6005c9b" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>precond_</name></member>
      <member refid="classrocalution_1_1_solver_1a57992cfc687f3bf260964ad2fc19c467" prot="public" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>Print</name></member>
      <member refid="classrocalution_1_1_solver_1add2b6aec27eeaffbbd1130cc846c1019" prot="protected" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>PrintEnd_</name></member>
      <member refid="classrocalution_1_1_solver_1a9e6a5ceb6a8c35cd8d54ebff0664d27e" prot="protected" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>PrintStart_</name></member>
      <member refid="classrocalution_1_1_solver_1acd20a051f0560a77645e35361df8f87c" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>ReBuildNumeric</name></member>
      <member refid="classrocalution_1_1_solver_1a91354c5c116742c58d9eb2094cc6a68e" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>ResetOperator</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1ad60a8b2047aad74e488c552264fa7737" prot="public" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>RocalutionObj</name></member>
      <member refid="classrocalution_1_1_solver_1a12765b63efe75bc88406a8d6ebb5aacc" prot="public" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>SetOperator</name></member>
      <member refid="classrocalution_1_1_direct_linear_solver_1ae8295100cd76f64ff83efd8024a48728" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>Solve</name></member>
      <member refid="classrocalution_1_1_direct_linear_solver_1abad2f9333921b2e2faea18b144e13a87" prot="protected" virt="pure-virtual"><scope>rocalution::DirectLinearSolver</scope><name>Solve_</name></member>
      <member refid="classrocalution_1_1_solver_1a009956b05d4d5d1d38e4c24341b14a66" prot="public" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>Solver</name></member>
      <member refid="classrocalution_1_1_solver_1a034b434a4340a52430deed9b210e5003" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>SolveZeroSol</name></member>
      <member refid="classrocalution_1_1_solver_1a17c2830a0ede8d82d1336aa25da6f907" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>Sync</name></member>
      <member refid="classrocalution_1_1_solver_1a2ee162346e0d52543f9d3d25fe70ea8a" prot="protected" virt="non-virtual"><scope>rocalution::DirectLinearSolver</scope><name>verb_</name></member>
      <member refid="classrocalution_1_1_direct_linear_solver_1a4feccca7c61e39e8f5628767f2a86c28" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>Verbose</name></member>
      <member refid="classrocalution_1_1_direct_linear_solver_1a36be7fcc66dbafa71da5fd50aa25ecc8" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>~DirectLinearSolver</name></member>
      <member refid="classrocalution_1_1_rocalution_obj_1a55a2f93f798cebdda6343b20db959e2d" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>~RocalutionObj</name></member>
      <member refid="classrocalution_1_1_solver_1af861566a540fc6cc399c844bbc789ec6" prot="public" virt="virtual"><scope>rocalution::DirectLinearSolver</scope><name>~Solver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
